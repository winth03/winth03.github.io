{"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"topics-to-learn-c"},"children":[{"type":"text","value":"Topics to learn C"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"getting-started-with-c-language"},"children":[{"type":"text","value":"Getting started with C Language"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The history of C."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The evolution of the C programming standards."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The relationship of C to C++."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Some recommended / free books for learning C."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Source Code Compilation, Cross-Compilation Process."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"C/C++ Toolchains and Open Source IDEs."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"code-comments"},"children":[{"type":"text","value":"Code Comments"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Single-line comments: // ...."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Multple-line comments: /* ... */"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"keywords-or-reserved-words-in-c"},"children":[{"type":"text","value":"Keywords or reserved words in C"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"data-types"},"children":[{"type":"text","value":"Data Types"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Basic data types"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"'int' represents integers (whole numbers) with varying sizes depending on the platform."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"'char' represents single characters."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"'float' represents single-precision floating-point numbers."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"'double' represents double-precision floating-point numbers."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"'bool' (via #include <stdbool.h>) represents boolean values ('true' or 'false')."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"'_Bool' (C99's boolean type)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Derived Data Types"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Arrays, structures, unions"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Enumerated data types (the 'enum' keyword)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"'void' data type"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"a special data type that indicates the absence of a specific type."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"used to represent a lack of value or to indicate that a function does not return any value."}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"type-modifiers-for-numbers"},"children":[{"type":"text","value":"Type Modifiers for Numbers"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"integers: such as 'signed', 'unsigned', 'short', 'long', 'long long'"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"floating-points: 'long' (for 'float' and 'double')"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"type-conversions"},"children":[{"type":"text","value":"Type Conversions"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Implicit: short to int to long, float to double."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Explicit: ("},{"type":"element","tag":"type","props":{},"children":[{"type":"text","value":")(expression) for type-casting."}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"literals-constant-values-of-specific-data-types"},"children":[{"type":"text","value":"Literals (constant values of specific data types)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Primitive vs. Compound Literals"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Integer Literal: 42, -100, 0, 123456"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Octal Literal: 0644"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hexadecimal Literal: 0x1A, 0xFF, 0xABC"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Floating-Point Literal: 3.14, -0.005, 1.0e-5"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Character Literal: 'A', '5', '!', '\\n'"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Boolean Literal (C99 and later): true, false"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"String Literal: \"Hello, world!\", \"\" (an empty string)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"identifiers-and-variables"},"children":[{"type":"text","value":"Identifiers and Variables"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Identifier Naming"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Variable Definition and Initialization"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Variable Scope"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Constants (with the const keyword)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Declaration vs. Definition"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A declaration introduces an identifier to the compiler and informs it about\nthe data type and name of the identifier."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A definition creates the actual instance of an identifier in memory.\nIt allocates memory for variables and provides the implementation for functions."}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"operators"},"children":[{"type":"text","value":"Operators"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Arithmetic Operators: +, -, *, /, %, ++, --"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Relational Operators: ==, !=, >, <, >=, <="}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Logical Operators: &&, ||, !"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Bitwise Operators: &, |, ^, ~, <<, >>"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Assignment Operators: =, +=, -=, *=, /=, %=, &=, |=, ^=, >>=, <<="}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Conditional Operator: () ? () : ()"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Miscellaneous Operators:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":", (comma), & (address-of operator)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sizeof(...) used to determine the size in bytes of a data type or variable."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":". (dot or memory-access operator)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-> (memory-access operator),"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"..."}]},{"type":"text","value":" (square bracket or array indexing operator)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Side Effects of the ++ and -- Operators for Value Modification"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Pre-increment and Pre-decrement"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Post-increment and Post-decrement"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Order of Evaluation"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Short-circuit logical operators"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The && (logical AND) operator: (expr1 && expr2)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The || (logical OR) operator: (expr1 || expr2)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"These short-circuit operators halt evaluation once the final outcome is determined by the preceding sub-expressions."}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"strings"},"children":[{"type":"text","value":"Strings"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A string is a sequence of characters stored in an array that represents text."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"terminated by a null character ('\\0')."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"accessible by a (char *) pointer."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"array-1d-and-2d"},"children":[{"type":"text","value":"Array: 1D and 2D"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"a collection of elements of the same data type, stored in contiguous memory locations."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"structs-short-for-structures"},"children":[{"type":"text","value":"Structs (short for structures)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"a composite data type that allows you to group together variables of different data types under a single name."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"union"},"children":[{"type":"text","value":"Union"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"a user-defined data type that all members of a union share the same memory location."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"bit-field"},"children":[{"type":"text","value":"Bit-field"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"a bit field is used to specify the number of bits to be used to store a particular data member within a struct."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"enumeration-enum"},"children":[{"type":"text","value":"Enumeration (enum)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"a user-defined data type that consists of a set of named integer constants."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"typedef-for-user-defined-types"},"children":[{"type":"text","value":"Typedef for user-defined types"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"used to create an alias or a new name for an existing data type."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"provides a way to define custom names for data types."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"statements-such-as"},"children":[{"type":"text","value":"Statements such as"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Iteration Statements/Loops: for, while, do-while"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Selection Statements: if, if-else, switch-case"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Assignment Statements"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"functions"},"children":[{"type":"text","value":"Functions"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Variable arguments of a function"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"pointers"},"children":[{"type":"text","value":"Pointers"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Pointer Arithmetics"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Function Pointers and Parameters"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"c-preprocessor-directives-and-macros"},"children":[{"type":"text","value":"C Preprocessor Directives and Macros"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"#include <...>: include header files."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"#define"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"#if, #else, #ifdef, #ifndef, #endif, #undef"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"#error"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"command-line-arguments-to-the-main-function"},"children":[{"type":"text","value":"Command-line arguments to the main() function"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"provided by the user when they run the program and can be used to pass information or parameters to the program."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"int main(int argc, char *argv"},{"type":"element","tag":"span","props":{},"children":[]},{"type":"text","value":") { ... }"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"the-c-standard-io-library"},"children":[{"type":"text","value":"The C Standard I/O library"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"printf() and scanf() functions."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"fprintf() functions and the output streams ('stdout' and 'stderr')."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Formatted strings for Input/Output"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"files-and-io-streams"},"children":[{"type":"text","value":"Files and I/O streams"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"<stdio.h> (Standard I/O Library) provides functions for basic input and output operations."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Examples of functions in this library:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"fopen(), fclose()"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"fprintf(), fscanf()"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"fputc(), fgetc(), fgets(), fputs()"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"fwrite(), fread(), feof(), fseek(), rewind()"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Other standard C libraries:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"<stdlib.h> provides functions for various file operations."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"<unistd.h> (Unix Standard Library) provides functions for low-level file operations."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"<sys/types.h> and <sys/stat.h> provide data types and functions for working with file status and attributes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"<fcntl.h> provides functions for managing file descriptors and controlling file attributes."}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"pseudo-random-number-generation"},"children":[{"type":"text","value":"Pseudo-Random Number Generation"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"srand(): used to seed the random number generator."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"rand(): returns an integer between 0 and RAND_MAX."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Both functions are declared in <stdlib.h>"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"the-c-standard-math-library"},"children":[{"type":"text","value":"The C Standard Math library"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The <math.h> header file must be included in source code in order to use the C Standard Math library."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The -lm flag must be specified for program linking (when using GCC C compiler)."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"posix-threads-and-multithreading"},"children":[{"type":"text","value":"POSIX Threads and Multithreading"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"often referred to as pthreads."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"a standardized threading library for creating and managing threads in a multi-threaded program."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"used to create multiple threads within a single process, enabling concurrent execution of tasks."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"interprocess-communication-ipc"},"children":[{"type":"text","value":"Interprocess Communication (IPC)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"provides the mechanisms and techniques used for communication and data sharing between different threads or processes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"common IPC mechanisms:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Pipes and Named Pipes (FIFOs)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sockets"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Signals"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Message Queues"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Semaphores, Mutexes, and Condition Variables"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shared Memory"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Message Passing"}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"assertion"},"children":[{"type":"text","value":"Assertion"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"used to ensure that certain conditions hold true during program execution."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The assert() macro can be used to perform assertions, defined in the <assert.h> header file."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"memory-management-heap-usage"},"children":[{"type":"text","value":"Memory management (Heap Usage)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Memory management in C involves allocating and deallocating memory on the heap."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Heap is a region of memory used for dynamically allocated data."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Primary functions for memory management on the heap:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"malloc() used to allocate a block of memory on the heap."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"calloc() used to allocate memory for an array of elements, initializing them to zero."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"realloc() used to resize an existing allocated memory block."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"free() used to release memory that was previously allocated."}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"common-c-programming-idioms-and-developer-practices"},"children":[{"type":"text","value":"Common C programming idioms and developer practices"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use Meaningful Variable and Function Names."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use consistent indentation and formatting."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Write Code with Comments and Documentation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Avoid Global Variables."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Minimize the use of global variables."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Properly allocate and release memory."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use Constants and Enumerations for improved code readability."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Avoid using hard-coded values directly in the code. Instead, use named constants or macros."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Break large functions into smaller, more manageable functions to improve readability."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Write code that is portable across different platforms and compilers."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"..."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"common-pitfalls"},"children":[{"type":"text","value":"Common Pitfalls"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Memory Leakage"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Buffer Overflows"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Integer Overflow and Underflow"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Null Pointer Dereference"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Improper Type Conversion and Casting"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use of Uninitialized Variables"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"..."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"gui-based-application-development-with-cc"},"children":[{"type":"text","value":"GUI-based Application Development (with C/C++)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"GTK3 or GTK4 framework (for Linux)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Qt5 framework (Cross-platform)"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"additional-resources"},"children":[{"type":"text","value":"Additional Resources"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://magpi.raspberrypi.com/books/c-gui-programming","rel":["nofollow"]},"children":[{"type":"text","value":"An Introduction to C & GUI Programming by Simon Long, 2019."}]}]},{"type":"element","tag":"h3","props":{"id":"review-of-the-book"},"children":[{"type":"text","value":"Review of the Book:"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"    This book is a great introduction to C programming for beginners. It covers all the basics of C programming, including data types, variables, operators, functions, pointers, arrays, strings, structs, unions, enums, and more. It also covers the C Standard Library, including the C Standard I/O library, files and I/O streams, and the C Standard Math library. The book also covers some advanced topics such as multithreading, interprocess communication, memory management, and GUI-based application development with C/C++. The book is well-written and easy to follow. It is a great resource for anyone who wants to learn C programming."}]}]}],"toc":{"title":"","searchDepth":3,"depth":2,"links":[{"id":"getting-started-with-c-language","depth":2,"text":"Getting started with C Language"},{"id":"code-comments","depth":2,"text":"Code Comments"},{"id":"keywords-or-reserved-words-in-c","depth":2,"text":"Keywords or reserved words in C"},{"id":"data-types","depth":2,"text":"Data Types"},{"id":"type-modifiers-for-numbers","depth":2,"text":"Type Modifiers for Numbers"},{"id":"type-conversions","depth":2,"text":"Type Conversions"},{"id":"literals-constant-values-of-specific-data-types","depth":2,"text":"Literals (constant values of specific data types)"},{"id":"identifiers-and-variables","depth":2,"text":"Identifiers and Variables"},{"id":"operators","depth":2,"text":"Operators"},{"id":"strings","depth":2,"text":"Strings"},{"id":"array-1d-and-2d","depth":2,"text":"Array: 1D and 2D"},{"id":"structs-short-for-structures","depth":2,"text":"Structs (short for structures)"},{"id":"union","depth":2,"text":"Union"},{"id":"bit-field","depth":2,"text":"Bit-field"},{"id":"enumeration-enum","depth":2,"text":"Enumeration (enum)"},{"id":"typedef-for-user-defined-types","depth":2,"text":"Typedef for user-defined types"},{"id":"statements-such-as","depth":2,"text":"Statements such as"},{"id":"functions","depth":2,"text":"Functions"},{"id":"pointers","depth":2,"text":"Pointers"},{"id":"c-preprocessor-directives-and-macros","depth":2,"text":"C Preprocessor Directives and Macros"},{"id":"command-line-arguments-to-the-main-function","depth":2,"text":"Command-line arguments to the main() function"},{"id":"the-c-standard-io-library","depth":2,"text":"The C Standard I/O library"},{"id":"files-and-io-streams","depth":2,"text":"Files and I/O streams"},{"id":"pseudo-random-number-generation","depth":2,"text":"Pseudo-Random Number Generation"},{"id":"the-c-standard-math-library","depth":2,"text":"The C Standard Math library"},{"id":"posix-threads-and-multithreading","depth":2,"text":"POSIX Threads and Multithreading"},{"id":"interprocess-communication-ipc","depth":2,"text":"Interprocess Communication (IPC)"},{"id":"assertion","depth":2,"text":"Assertion"},{"id":"memory-management-heap-usage","depth":2,"text":"Memory management (Heap Usage)"},{"id":"common-c-programming-idioms-and-developer-practices","depth":2,"text":"Common C programming idioms and developer practices"},{"id":"common-pitfalls","depth":2,"text":"Common Pitfalls"},{"id":"gui-based-application-development-with-cc","depth":2,"text":"GUI-based Application Development (with C/C++)"},{"id":"additional-resources","depth":2,"text":"Additional Resources","children":[{"id":"review-of-the-book","depth":3,"text":"Review of the Book:"}]}]}}}